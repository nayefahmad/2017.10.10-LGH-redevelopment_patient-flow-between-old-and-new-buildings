unlist %>% unname
str(los.4e)
summary(los.4e)
los.4e.df <- as.data.frame(los.4e)  # easier to work with in ggplot
str(los.4e.df)
summary.4e <-
summarise(los.4e.df,
unit="4E",
mean=mean(los.4e, na.rm=TRUE),
median=quantile(los.4e, probs = .50, na.rm=TRUE),
x90th.perc=quantile(los.4e, probs = .90, na.rm=TRUE))
summary.4e
table.4e <- table(los.4e) %>% as.data.frame
arrivals.4e <- lapply(split.losdata.4e, arrival.fn,
nursingunit = "4E")
split.losdata.4w <- split(losdata.4w, losdata.4w$id)
los.4w <-
lapply(split.losdata.4w, los.fn,
nursingunit = "4W")  %>%  # nursingunit is passed to los.fn
unlist %>% unname
str(los.4w)
summary(los.4w)
los.4w.df <- as.data.frame(los.4w)  # easier to work with in ggplot
str(los.4w.df)
summary.4w <-
summarise(los.4w.df,
unit="4W",
mean=mean(los.4w, na.rm=TRUE),
median=quantile(los.4w, probs = .50, na.rm=TRUE),
x90th.perc=quantile(los.4w, probs = .90, na.rm=TRUE))
table.4w <- table(los.4w) %>% as.data.frame
summary.4w
split.losdata.6e <- split(losdata.6e, losdata.6e$id)
los.6e <-
lapply(split.losdata.6e, los.fn,
nursingunit = "6E")  %>%
unlist %>% unname
str(los.6e)
summary(los.6e)
los.6e.df <- as.data.frame(los.6e)  # easier to work with in ggplot
str(los.6e.df)
summary.6e <-
summarise(los.6e.df,
unit="6E",
mean=mean(los.6e, na.rm=TRUE),
median=quantile(los.6e, probs = .50, na.rm=TRUE),
x90th.perc=quantile(los.6e, probs = .90, na.rm=TRUE))
table.6e <- table(los.6e) %>% as.data.frame
summary.6e
table.6e
summary.6e
split.losdata.6w <- split(losdata.6w, losdata.6w$id)
los.6w <-
lapply(split.losdata.6w, los.fn,
nursingunit = "6W")  %>%
unlist %>% unname
str(los.6w)
summary(los.6w)
los.6w.df <- as.data.frame(los.6w)  # easier to work with in ggplot
str(los.6w.df)
summary.6w <-
summarise(los.6w.df,
unit="6W",
mean=mean(los.6w, na.rm=TRUE),
median=quantile(los.6w, probs = .50, na.rm=TRUE),
x90th.perc=quantile(los.6w, probs = .90, na.rm=TRUE))
table.6w <- table(los.6w) %>% as.data.frame
summary.6w
p1_hist.4e <-
ggplot(los.4e.df,
aes(x=los.4e)) +
geom_histogram(stat="bin",
binwidth = 1,
col="black",
fill="deepskyblue") +
scale_x_continuous(limits=c(-1,85),
breaks=seq(0,85,5),
expand=c(0,0)) +
scale_y_continuous(expand=c(0,0)) +
labs(x="LOS in days",
y="Number of cases",
title="Distribution of LOS in LGH 4E",
subtitle="From 2014-04-01 onwards \nMedian = 5 days; Mean = 11.1 days; ",
caption= "\nData source: DSDW ADTCMart; extraction date: 2017-10-10 ") +
geom_vline(xintercept = summary.4e[,2],
col="red") +
geom_vline(xintercept = summary.4e[,3],
col="red",
linetype=2) +
theme_classic(base_size = 16); p1_hist.4e
library("ggplot")
library("ggplot2")
p1_hist.4e <-
ggplot(los.4e.df,
aes(x=los.4e)) +
geom_histogram(stat="bin",
binwidth = 1,
col="black",
fill="deepskyblue") +
scale_x_continuous(limits=c(-1,85),
breaks=seq(0,85,5),
expand=c(0,0)) +
scale_y_continuous(expand=c(0,0)) +
labs(x="LOS in days",
y="Number of cases",
title="Distribution of LOS in LGH 4E",
subtitle="From 2014-04-01 onwards \nMedian = 5 days; Mean = 11.1 days; ",
caption= "\nData source: DSDW ADTCMart; extraction date: 2017-10-10 ") +
geom_vline(xintercept = summary.4e[,2],
col="red") +
geom_vline(xintercept = summary.4e[,3],
col="red",
linetype=2) +
theme_classic(base_size = 16); p1_hist.4e
rbind(summary.4e,
summary.4w,
summary.6e,
summary.6w)
p1_hist.4e <-
ggplot(los.4e.df,
aes(x=los.4e)) +
geom_histogram(stat="bin",
binwidth = 1,
col="black",
fill="deepskyblue") +
scale_x_continuous(limits=c(-1,85),
breaks=seq(0,85,5),
expand=c(0,0)) +
scale_y_continuous(expand=c(0,0)) +
labs(x="LOS in days",
y="Number of cases",
title="Distribution of LOS in LGH 4E",
subtitle="From 2014-04-01 onwards \nMedian = 5 days; Mean = 11 days; ",
caption= "\nData source: DSDW ADTCMart; extraction date: 2017-10-10 ") +
geom_vline(xintercept = summary.4e[,2],
col="red") +
geom_vline(xintercept = summary.4e[,3],
col="red",
linetype=2) +
theme_classic(base_size = 16); p1_hist.4e
p2_hist.4w <-
ggplot(los.4w.df,
aes(x=los.4w)) +
geom_histogram(stat="bin",
binwidth = 1,
col="black",
fill="deepskyblue") +
scale_x_continuous(limits=c(-1,85),
breaks=seq(0,85,5),
expand=c(0,0)) +
scale_y_continuous(limits=c(0,200),
expand=c(0,0)) +
labs(x="LOS in days",
y="Number of cases",
title="Distribution of LOS in LGH 4W",
subtitle="From 2014-04-01 onwards \nMedian = 19 days; Mean = 25.4 days; ",
caption= "\nData source: DSDW ADTCMart; extraction date: 2017-10-11 ") +
geom_vline(xintercept = summary.4w[,2],
col="red") +
geom_vline(xintercept = summary.4w[,3],
col="red",
linetype=2) +
theme_classic(base_size = 16); p2_hist.4w
rbind(summary.4e,
summary.4w,
summary.6e,
summary.6w)
p2_hist.4w <-
ggplot(los.4w.df,
aes(x=los.4w)) +
geom_histogram(stat="bin",
binwidth = 1,
col="black",
fill="deepskyblue") +
scale_x_continuous(limits=c(-1,85),
breaks=seq(0,85,5),
expand=c(0,0)) +
scale_y_continuous(limits=c(0,200),
expand=c(0,0)) +
labs(x="LOS in days",
y="Number of cases",
title="Distribution of LOS in LGH 4W",
subtitle="From 2014-04-01 onwards \nMedian = 19 days; Mean = 25 days; ",
caption= "\nData source: DSDW ADTCMart; extraction date: 2017-10-11 ") +
geom_vline(xintercept = summary.4w[,2],
col="red") +
geom_vline(xintercept = summary.4w[,3],
col="red",
linetype=2) +
theme_classic(base_size = 16); p2_hist.4w
rbind(summary.4e,
summary.4w,
summary.6e,
summary.6w)
p1_hist.4e <-
ggplot(los.4e.df,
aes(x=los.4e)) +
geom_histogram(stat="bin",
binwidth = 1,
col="black",
fill="deepskyblue") +
scale_x_continuous(limits=c(-1,85),
breaks=seq(0,85,5),
expand=c(0,0)) +
scale_y_continuous(expand=c(0,0)) +
labs(x="LOS in days",
y="Number of cases",
title="Distribution of LOS in LGH 4E",
subtitle="From 2014-04-01 onwards \nMedian = 4.9 days; Mean = 11.1 days; ",
caption= "\nData source: DSDW ADTCMart; extraction date: 2017-10-10 ") +
geom_vline(xintercept = summary.4e[,2],
col="red") +
geom_vline(xintercept = summary.4e[,3],
col="red",
linetype=2) +
theme_classic(base_size = 16); p1_hist.4e
rbind(summary.4e,
summary.4w,
summary.6e,
summary.6w)
p2_hist.4w <-
ggplot(los.4w.df,
aes(x=los.4w)) +
geom_histogram(stat="bin",
binwidth = 1,
col="black",
fill="deepskyblue") +
scale_x_continuous(limits=c(-1,85),
breaks=seq(0,85,5),
expand=c(0,0)) +
scale_y_continuous(limits=c(0,200),
expand=c(0,0)) +
labs(x="LOS in days",
y="Number of cases",
title="Distribution of LOS in LGH 4W",
subtitle="From 2014-04-01 onwards \nMedian = 18.8 days; Mean = 25.4 days; ",
caption= "\nData source: DSDW ADTCMart; extraction date: 2017-10-11 ") +
geom_vline(xintercept = summary.4w[,2],
col="red") +
geom_vline(xintercept = summary.4w[,3],
col="red",
linetype=2) +
theme_classic(base_size = 16); p2_hist.4w
rbind(summary.4e,
summary.4w,
summary.6e,
summary.6w)
p3_hist.6e <-
ggplot(los.6e.df,
aes(x=los.6e)) +
geom_histogram(stat="bin",
binwidth = 1,
col="black",
fill="deepskyblue") +
scale_x_continuous(limits=c(-1,85),
breaks=seq(0,85,5),
expand=c(0,0)) +
scale_y_continuous(expand=c(0,0)) +
labs(x="LOS in days",
y="Number of cases",
title="Distribution of LOS in LGH 6E",
subtitle="From 2014-04-01 onwards \nMedian = 2.9 days; Mean = 6.7 days; ",
caption= "\nData source: DSDW ADTCMart; extraction date: 2017-10-10 ") +
geom_vline(xintercept = summary.6e[,2],
col="red") +
geom_vline(xintercept = summary.6e[,3],
col="red",
linetype=2) +
theme_classic(base_size = 16); p3_hist.6e
rbind(summary.4e,
summary.4w,
summary.6e,
summary.6w)
p4_hist.6w <-
ggplot(los.6w.df,
aes(x=los.6w)) +
geom_histogram(stat="bin",
binwidth = 1,
col="black",
fill="deepskyblue") +
scale_x_continuous(limits=c(-1,85),
breaks=seq(0,85,5),
expand=c(0,0)) +
scale_y_continuous(expand=c(0,0)) +
labs(x="LOS in days",
y="Number of cases",
title="Distribution of LOS in LGH 6W",
subtitle="From 2014-04-01 onwards \nMedian = 3.0 days; Mean = 8.5 days; ",
caption= "\nData source: DSDW ADTCMart; extraction date: 2017-10-11 ") +
geom_vline(xintercept = summary.6w[,2],
col="red") +
geom_vline(xintercept = summary.6w[,3],
col="red",
linetype=2) +
theme_classic(base_size = 16); p4_hist.6w
rbind(summary.4e,
summary.4w,
summary.6e,
summary.6w)
pdf(file="\\\\vch.ca/departments/Projects (Dept VC)/Patient Flow Project/Coastal HSDA/2017 Requests/2017.10.10 LGH redevelopment - patient flow between old and new buildings/results/output from src/los-histogram-2015-2017_2.pdf",
height= 8.5, width = 14)
p1_hist.4e
p2_hist.4w
p3_hist.6e
p4_hist.6w
dev.off()
write.csv(rbind(summary.4e,
summary.4w,
summary.6e,
summary.6w),
file="\\\\vch.ca/departments/Projects (Dept VC)/Patient Flow Project/Coastal HSDA/2017 Requests/2017.10.10 LGH redevelopment - patient flow between old and new buildings/results/output from src/2017-10-11_LGH_summary-of-LOS.csv",
row.names = FALSE)
write.csv(table.4e, file="\\\\vch.ca/departments/Projects (Dept VC)/Patient Flow Project/Coastal HSDA/2017 Requests/2017.10.10 LGH redevelopment - patient flow between old and new buildings/results/output from src/2017-10-11_LGH_histogram-table_4E.csv",
row.names = FALSE)
write.csv(table.4w, file="\\\\vch.ca/departments/Projects (Dept VC)/Patient Flow Project/Coastal HSDA/2017 Requests/2017.10.10 LGH redevelopment - patient flow between old and new buildings/results/output from src/2017-10-11_LGH_histogram-table_4W.csv",
row.names = FALSE)
write.csv(table.6e, file="\\\\vch.ca/departments/Projects (Dept VC)/Patient Flow Project/Coastal HSDA/2017 Requests/2017.10.10 LGH redevelopment - patient flow between old and new buildings/results/output from src/2017-10-11_LGH_histogram-table_6E.csv",
row.names = FALSE)
write.csv(table.6w, file="\\\\vch.ca/departments/Projects (Dept VC)/Patient Flow Project/Coastal HSDA/2017 Requests/2017.10.10 LGH redevelopment - patient flow between old and new buildings/results/output from src/2017-10-11_LGH_histogram-table_6W.csv",
row.names = FALSE)
a <- c(1,1,1,1)
a==1
x <- df(a=rep(1,10), b=rep(2,10))
x <- data.frame(a=rep(1,10), b=rep(2,10))
x
x <- data.frame(a=rep(1,10), b=c(rep(2,9), )
)
x <- data.frame(a=rep(1,10), b=c(rep(2,9),1))
x
if(x$a[1]==1 && x$b==2){print("yes")}
if(x$a[1]==1 & x$b==2){print("yes")}
x <- data.frame(a=rep(1,10), b=c(1, rep(2,9)))
x <- data.frame(a=rep(1,10), b=c(rep(2,9),1))
y <- data.frame(a=rep(1,10), b=c(1, rep(2,9)))
y
if(x$a[1]==1 && x$b==2){print("yes")} else {print("no")}
if(y$a[1]==1 && y$b==2){print("yes")} else {print("no")}
if(y$a[1]==1 && y$b==1){print("yes")} else {print("no")}
if(y$a[1]==1 & y$b==1){print("yes")} else {print("no")}
if(y$a[2]==1 && y$b==1){print("yes")} else {print("no")}
?&&
#******************************************
# function to find LOS of single patient
#******************************************
# rm(list=ls())
# todo: --------
#---------------
# example data ----------
# source("2017-10-06_Example-data-cleaning.R")
# str(losdata)
# split dataframe to create 4 separate dfs :
# split.losdata <- split(losdata, losdata$id)
# str(split.losdata)
# function definition: ----------------
los.fn <- function(df, nursingunit){
# inputs:
# dataframe with all rows of single patient-account combo
# nursingunitcode as character string
# output: LOS in 4E in days
require("dplyr")
require("tidyr")
require("lubridate")
df <- arrange(df,
ad.dtime, t.dtime)
# print(df)
# df$ad.unitcode
if (df$ad.unitcode[1] == nursingunit && is.na(df$t.dtime[1] == TRUE)) {
# patient type: ad and dis from 4E, no transfers
# print("branch1")
difftime <- df$dis.dtime - df$ad.dtime
return(as.numeric(difftime, units="days"))
} else if (df$ad.unitcode[1] == nursingunit && df$to.unit != nursingunit){
# note the use of &&: "&& evaluates left to right examining only
# the first element of each vector. Here, df$ad.unitcode[1] is a
# vector of length 1, while length(df$to.unit) >= 1
# patient type: admit to 4E, transferred out of 4E,
# no internal transfers in 4E
# print("branch2")
difftime <- df$t.dtime[1] - df$ad.dtime[1]
return(as.numeric(difftime, units="days"))
} else if (df$ad.unitcode[1] == nursingunit && df$to.unit == nursingunit){
# patient type: admit to 4E, internal transfer in 4E
index <- df$to.unit != nursingunit
# ^ logical vec to find first transfer out of 4E
# print("branch3")
# print(c("index=", index))
# check whether transfer or discharge is the endpoint of LOS:
if (any(index)==TRUE){
i <- match(TRUE, index)  # rownum of transfer out of 4E
difftime <- df$t.dtime[i] - df$ad.dtime[1]
return(as.numeric(difftime, units="days"))
} else {
difftime <- df$dis.dtime[1] - df$ad.dtime[1]
return(as.numeric(difftime, units="days"))
}
} else if (df$ad.unitcode[1] != nursingunit && df$to.unit == nursingunit) {
# patient type: admit to other, transferred to 4E
index <- df$to.unit != nursingunit
# print("branch4")
# print(c("index=", index))
# check whether transfer or discharge is the endpoint of LOS:
# note that t.dtime[1] is the start point, not ad.dtime[1]
if (any(index)==TRUE){
i <- match(TRUE, index)  # rownum of transfer out of 4E
difftime <- df$t.dtime[i] - df$t.dtime[1]
return(as.numeric(difftime, units="days"))
} else {
difftime <- df$dis.dtime[1] - df$t.dtime[1]
return(as.numeric(difftime, units="days"))
}
} else {
# patient type: other
# print("branch5")
return(NA)
}
}
# test the function over each df in split.losdata: ------------
# lapply(split.losdata, los.fn)  %>% unlist # %>% unname %>% str
#
# running separately on each element:
# los.fn(split.losdata[[1]])
# los.fn(split.losdata[[2]])
# los.fn(split.losdata[[3]])
# los.fn(split.losdata[[4]])
rm(los.fn)
#******************************************
# function to find LOS of single patient
#******************************************
# rm(list=ls())
# todo: --------
#---------------
# example data ----------
# source("2017-10-06_Example-data-cleaning.R")
# str(losdata)
# split dataframe to create 4 separate dfs :
# split.losdata <- split(losdata, losdata$id)
# str(split.losdata)
# function definition: ----------------
los.fn <- function(df, nursingunit){
# inputs:
# dataframe with all rows of single patient-account combo
# nursingunitcode as character string
# output: LOS in 4E in days
require("dplyr")
require("tidyr")
require("lubridate")
df <- arrange(df,
ad.dtime, t.dtime)
# print(df)
# df$ad.unitcode
if (df$ad.unitcode[1] == nursingunit && is.na(df$t.dtime[1] == TRUE)) {
# patient type: ad and dis from 4E, no transfers
# print("branch1")
difftime <- df$dis.dtime - df$ad.dtime
return(as.numeric(difftime, units="days"))
} else if (df$ad.unitcode[1] == nursingunit && df$to.unit != nursingunit){
# patient type: admit to 4E, transferred out of 4E,
# no internal transfers in 4E
# print("branch2")
difftime <- df$t.dtime[1] - df$ad.dtime[1]
return(as.numeric(difftime, units="days"))
} else if (df$ad.unitcode[1] == nursingunit && df$to.unit == nursingunit){
# patient type: admit to 4E, internal transfer in 4E
index <- df$to.unit != nursingunit
# ^ logical vec to find first transfer out of 4E
# print("branch3")
# print(c("index=", index))
# check whether transfer or discharge is the endpoint of LOS:
if (any(index)==TRUE){
i <- match(TRUE, index)  # rownum of transfer out of 4E
difftime <- df$t.dtime[i] - df$ad.dtime[1]
return(as.numeric(difftime, units="days"))
} else {
difftime <- df$dis.dtime[1] - df$ad.dtime[1]
return(as.numeric(difftime, units="days"))
}
} else if (df$ad.unitcode[1] != nursingunit && df$to.unit == nursingunit) {
# patient type: admit to other, transferred to 4E
index <- df$to.unit != nursingunit
# print("branch4")
# print(c("index=", index))
# check whether transfer or discharge is the endpoint of LOS:
# note that t.dtime[1] is the start point, not ad.dtime[1]
if (any(index)==TRUE){
i <- match(TRUE, index)  # rownum of transfer out of 4E
difftime <- df$t.dtime[i] - df$t.dtime[1]
return(as.numeric(difftime, units="days"))
} else {
difftime <- df$dis.dtime[1] - df$t.dtime[1]
return(as.numeric(difftime, units="days"))
}
} else {
# patient type: other
# print("branch5")
return(NA)
}
}
# test the function over each df in split.losdata: ------------
# lapply(split.losdata, los.fn)  %>% unlist # %>% unname %>% str
#
# running separately on each element:
# los.fn(split.losdata[[1]])
# los.fn(split.losdata[[2]])
# los.fn(split.losdata[[3]])
# los.fn(split.losdata[[4]])
getwd()
setwd("\\\\vch.ca/departments/Projects (Dept VC)/Patient Flow Project/Coastal HSDA/2017 Requests/2017.10.10 LGH redevelopment - patient flow between old and new buildings/results/output from src/data")
list.files()
write.table(list.files())
writeClipboard(list.files())
setwd("\\\\vch.ca/departments/Projects (Dept VC)/Patient Flow Project/Coastal HSDA/2017 Requests/2017.10.10 LGH redevelopment - patient flow between old and new buildings/results/output from src")
writeClipboard(list.files())
