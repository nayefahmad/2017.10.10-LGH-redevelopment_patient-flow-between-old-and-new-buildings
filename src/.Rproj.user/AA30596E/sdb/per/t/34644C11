{
    "collab_server" : "",
    "contents" : "\n\n#******************************************\n# function to find LOS of single patient\n#******************************************\n\n# rm(list=ls())\n\n# todo: --------\n\n#---------------\n\n\n# example data ----------\n# source(\"2017-10-06_Example-data-cleaning.R\")\n# str(losdata)\n\n# split dataframe to create 4 separate dfs : \n# split.losdata <- split(losdata, losdata$id)\n# str(split.losdata)\n\n\n# function definition: ----------------\n\nlos.fn <- function(df, nursingunit){\n      # inputs:\n            # dataframe with all rows of single patient-account combo \n            # nursingunitcode as character string \n      # output: LOS in 4E in days \n      \n      require(\"dplyr\")\n      require(\"tidyr\")\n      require(\"lubridate\")\n      \n      \n      df <- arrange(df,\n                    ad.dtime, t.dtime)\n      # print(df)\n      # df$ad.unitcode\n      if (df$ad.unitcode[1] == nursingunit && is.na(df$t.dtime[1] == TRUE)) {\n            # patient type: ad and dis from 4E, no transfers \n            # print(\"branch1\")\n            difftime <- df$dis.dtime - df$ad.dtime\n            return(as.numeric(difftime, units=\"days\"))\n            \n      } else if (df$ad.unitcode[1] == nursingunit && df$to.unit != nursingunit){\n            # patient type: admit to 4E, transferred out of 4E, \n            # no internal transfers in 4E \n            # print(\"branch2\")\n            difftime <- df$t.dtime[1] - df$ad.dtime[1]\n            return(as.numeric(difftime, units=\"days\"))\n            \n      } else if (df$ad.unitcode[1] == nursingunit && df$to.unit == nursingunit){\n            # patient type: admit to 4E, internal transfer in 4E\n            index <- df$to.unit != nursingunit  \n            # ^ logical vec to find first transfer out of 4E \n            # print(\"branch3\")\n            # print(c(\"index=\", index))\n            \n            # check whether transfer or discharge is the endpoint of LOS: \n            if (any(index)==TRUE){\n                  i <- match(TRUE, index)  # rownum of transfer out of 4E \n                  difftime <- df$t.dtime[i] - df$ad.dtime[1]\n                  return(as.numeric(difftime, units=\"days\"))\n            } else {\n                  difftime <- df$dis.dtime[1] - df$ad.dtime[1]\n                  return(as.numeric(difftime, units=\"days\"))\n            }\n            \n      } else if (df$ad.unitcode[1] != nursingunit && df$to.unit == nursingunit) {\n            # patient type: admit to other, transferred to 4E \n            index <- df$to.unit != nursingunit  \n            # print(\"branch4\") \n            # print(c(\"index=\", index))\n            \n            # check whether transfer or discharge is the endpoint of LOS: \n            # note that t.dtime[1] is the start point, not ad.dtime[1]\n            if (any(index)==TRUE){\n                  i <- match(TRUE, index)  # rownum of transfer out of 4E \n                  difftime <- df$t.dtime[i] - df$t.dtime[1]\n                  return(as.numeric(difftime, units=\"days\"))\n            } else {\n                  difftime <- df$dis.dtime[1] - df$t.dtime[1]\n                  return(as.numeric(difftime, units=\"days\"))\n            }\n            \n            \n      } else {\n            # patient type: other \n            # print(\"branch5\")\n            return(NA)\n      }\n}\n\n\n\n# test the function over each df in split.losdata: ------------\n# lapply(split.losdata, los.fn)  %>% unlist # %>% unname %>% str\n# \n# running separately on each element: \n# los.fn(split.losdata[[1]])\n# los.fn(split.losdata[[2]])\n# los.fn(split.losdata[[3]])\n# los.fn(split.losdata[[4]])\n",
    "created" : 1507330500111.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "714214294",
    "id" : "34644C11",
    "lastKnownWriteTime" : 1509069750,
    "last_content_update" : -2147483648,
    "path" : "//vch.ca/departments/Projects (Dept VC)/Patient Flow Project/Coastal HSDA/2017 Requests/2017.10.10 LGH redevelopment - patient flow between old and new buildings/src/los_function.R",
    "project_path" : "los_function.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}